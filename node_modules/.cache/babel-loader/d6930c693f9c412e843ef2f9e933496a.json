{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/saint/Desktop/how_to_generate_a_random_password_with_reactjs/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport generator from \"generate-password\";\n\nfunction App() {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [length, setLength] = useState(10);\n  const [isLowerCase, setIsLowerCase] = useState(true);\n  const [isUpperCase, setIsUpperCase] = useState(false);\n  const [isNumbers, setIsNumbers] = useState(false);\n  const [isSymbols, setIsSymbols] = useState(false);\n\n  const generatePassword = () => {\n    const pwd = generator.generate({\n      length: length,\n      lowercase: isLowerCase,\n      uppercase: isUpperCase,\n      numbers: isNumbers,\n      symbols: isSymbols\n    });\n    setPassword(pwd);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"How to generate a random password in React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"lbl-len\",\n              children: \"Length:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"input-len form-control\",\n              value: length,\n              onChange: e => setLength(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"mr-1\",\n              checked: isLowerCase,\n              onChange: () => setIsLowerCase(val => !val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"LowerCase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"mr-1\",\n              checked: isUpperCase,\n              onChange: () => setIsUpperCase(val => !val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"UpperCase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"mr-1\",\n              checked: isNumbers,\n              onChange: () => setIsNumbers(val => !val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Numbers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"mr-1\",\n              checked: isSymbols,\n              onChange: () => setIsSymbols(val => !val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Symbols\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Note: At least one should be true.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"btn btn-dark mt-2 mb-3\",\n            value: \"Generate Password\",\n            onClick: generatePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Password: \", password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ziAQZph6vlwx5nD9geAUbPqP5YU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saint/Desktop/how_to_generate_a_random_password_with_reactjs/src/App.js"],"names":["React","useState","generator","App","password","setPassword","length","setLength","isLowerCase","setIsLowerCase","isUpperCase","setIsUpperCase","isNumbers","setIsNumbers","isSymbols","setIsSymbols","generatePassword","pwd","generate","lowercase","uppercase","numbers","symbols","e","target","value","val"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport generator from \"generate-password\";\n\nfunction App() {\n  const [password, setPassword] = useState(\"\");\n  const [length, setLength] = useState(10);\n  const [isLowerCase, setIsLowerCase] = useState(true);\n  const [isUpperCase, setIsUpperCase] = useState(false);\n  const [isNumbers, setIsNumbers] = useState(false);\n  const [isSymbols, setIsSymbols] = useState(false);\n\n  const generatePassword = () => {\n    const pwd = generator.generate({\n      length: length,\n      lowercase: isLowerCase,\n      uppercase: isUpperCase,\n      numbers: isNumbers,\n      symbols: isSymbols,\n    });\n    setPassword(pwd);\n  };\n\n  return (\n    <div>\n      <h5>How to generate a random password in React</h5>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <label>\n              <span className=\"lbl-len\">Length:</span>\n              <input\n                type=\"number\"\n                className=\"input-len form-control\"\n                value={length}\n                onChange={(e) => setLength(e.target.value)}\n              />\n            </label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label className=\"form-control\">\n              <input\n                type=\"checkbox\"\n                className=\"mr-1\"\n                checked={isLowerCase}\n                onChange={() => setIsLowerCase((val) => !val)}\n              />\n              <span>LowerCase</span>\n            </label>\n          </div>\n          <div class=\"col\">\n            <label className=\"form-control\">\n              <input\n                type=\"checkbox\"\n                className=\"mr-1\"\n                checked={isUpperCase}\n                onChange={() => setIsUpperCase((val) => !val)}\n              />\n              <span>UpperCase</span>\n            </label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label className=\"form-control\">\n              <input\n                type=\"checkbox\"\n                className=\"mr-1\"\n                checked={isNumbers}\n                onChange={() => setIsNumbers((val) => !val)}\n              />\n              <span>Numbers</span>\n            </label>\n          </div>\n          <div class=\"col\">\n            <label className=\"form-control\">\n              <input\n                type=\"checkbox\"\n                className=\"mr-1\"\n                checked={isSymbols}\n                onChange={() => setIsSymbols((val) => !val)}\n              />\n              <span>Symbols</span>\n            </label>\n          </div>\n        </div>\n        <small>Note: At least one should be true.</small>\n        <div class=\"row\">\n          <div class=\"col\">\n            <input\n              type=\"button\"\n              className=\"btn btn-dark mt-2 mb-3\"\n              value=\"Generate Password\"\n              onClick={generatePassword}\n            />\n            <div>Password: {password}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}